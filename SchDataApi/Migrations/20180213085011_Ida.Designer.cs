// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SchDataApi.DataLayer;
using System;

namespace SchDataApi.Migrations
{
    [DbContext(typeof(SchContext))]
    [Migration("20180213085011_Ida")]
    partial class Ida
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchMod.Models.Active.ActInRc", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<int>("ActGrId")
                        .HasColumnName("ActGrID");

                    b.Property<int>("ActGrRcid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActGrRCID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Cls");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("SlRc")
                        .HasColumnName("SlRC");

                    b.HasKey("AutoId")
                        .HasName("PK_ActInRC");

                    b.ToTable("ActInRC");
                });

            modelBuilder.Entity("SchMod.Models.Active.Activity", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("ActGroupId")
                        .HasColumnName("ActGroupID");

                    b.Property<string>("ActSession");

                    b.Property<DateTime>("ActivityDate");

                    b.Property<string>("ActivityGroup")
                        .HasMaxLength(255);

                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActivityID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ActivityName")
                        .HasMaxLength(255);

                    b.Property<string>("ActivityRemarks")
                        .HasMaxLength(255);

                    b.Property<double>("ActivityValue");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<bool>("SendEmail")
                        .HasColumnName("SendEMail");

                    b.Property<bool>("SendSms")
                        .HasColumnName("SendSMS");

                    b.HasKey("AutoId")
                        .HasName("PK_Activity");

                    b.HasAlternateKey("ActivityId");

                    b.HasIndex("Dormant", "ActivityId")
                        .HasName("ActivityID");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("SchMod.Models.Active.ActivityGrades", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("ActClss")
                        .HasMaxLength(255);

                    b.Property<string>("ActExamName")
                        .HasMaxLength(255);

                    b.Property<int>("ActGroupId")
                        .HasColumnName("ActGroupID");

                    b.Property<string>("ActSession")
                        .HasMaxLength(255);

                    b.Property<string>("ActivityGrName")
                        .HasMaxLength(255);

                    b.Property<int>("ActivityGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActivityGradeID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("CdesIndicators")
                        .HasColumnName("CDesIndicators");

                    b.Property<int>("ChangeType");

                    b.Property<string>("CstdActGrades")
                        .HasColumnName("CStdActGrades");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DesIndicators");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("RegNum");

                    b.Property<string>("StdActGrades")
                        .HasMaxLength(255);

                    b.Property<double>("StdActMarks");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_ActivityGrades");

                    b.HasIndex("Dormant", "ActSession", "ActClss", "ActGroupId", "UniReg")
                        .HasName("RegNum");

                    b.HasIndex("ActExamName", "StdActMarks", "StdActGrades", "ActSession", "DesIndicators", "ActClss", "Dormant", "UniReg", "ActGroupId", "DBid")
                        .HasName("_dta_index_ActivityGrades_7_1577772678__K5_K13_K17_K10_K21_6_7_8_9_11");

                    b.ToTable("ActivityGrades");
                });

            modelBuilder.Entity("SchMod.Models.Active.ActivityGroup", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("ActClss");

                    b.Property<string>("ActCode");

                    b.Property<int>("ActGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActGroupID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ActGroupMotive")
                        .HasMaxLength(255);

                    b.Property<string>("ActGroupName")
                        .HasMaxLength(255);

                    b.Property<string>("ActGroupReportCard")
                        .HasMaxLength(255);

                    b.Property<string>("ActSession");

                    b.Property<int>("ActSn");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasColumnType("nchar(255)");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("GradeType");

                    b.Property<int>("IsReflectedInReportCard")
                        .HasColumnName("IsReflectedInReportCArd");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("AutoID");

                    b.HasAlternateKey("ActGroupId");

                    b.HasIndex("ActGroupId")
                        .HasName("ActGroupID");

                    b.ToTable("ActivityGroup");
                });

            modelBuilder.Entity("SchMod.Models.Active.Attendance", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession")
                        .HasMaxLength(50);

                    b.Property<string>("AtType");

                    b.Property<DateTime>("AttDate");

                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Cause");

                    b.Property<string>("Clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("Month");

                    b.Property<int>("RegNum");

                    b.Property<string>("Remark");

                    b.Property<string>("StdName");

                    b.Property<int>("UniReg");

                    b.Property<int>("Year");

                    b.Property<int>("clsRoll");

                    b.Property<bool>("isAbsent");

                    b.HasKey("AutoId")
                        .HasName("PK_Attendance");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("SchMod.Models.Active.TransActivity", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("ActivityId")
                        .HasColumnName("ActivityID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RegNumber");

                    b.Property<double>("Score")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("5");

                    b.Property<int>("TeachId")
                        .HasColumnName("TeachID");

                    b.Property<DateTime>("TransActDate");

                    b.Property<int>("TransActId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransActID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("TransActName")
                        .HasMaxLength(255);

                    b.Property<string>("TransActObserver")
                        .HasMaxLength(255);

                    b.Property<string>("TransActRemarks")
                        .HasMaxLength(255);

                    b.Property<double>("TransActValue");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("aaaaaTransActivity_PK");

                    b.HasIndex("TransActId")
                        .HasName("TransActID");

                    b.ToTable("TransActivity");
                });

            modelBuilder.Entity("SchMod.Models.Basics.AcaSession", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<DateTime>("SessionEndDate");

                    b.Property<string>("SessionName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("SessionStartDate");

                    b.Property<int>("Ssdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SSDID")
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_AcaSession");

                    b.ToTable("AcaSession");
                });

            modelBuilder.Entity("SchMod.Models.Basics.Clss", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession")
                        .HasMaxLength(50);

                    b.Property<int>("BoardCode");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("ClassTeacher")
                        .HasMaxLength(255);

                    b.Property<int>("ClsId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ClsName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("ClsPerDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cls_Per_Day")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ClsSat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cls_Sat")
                        .HasDefaultValueSql("0");

                    b.Property<double>("ClssNum");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Room")
                        .HasMaxLength(255);

                    b.Property<int>("StdStrength")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("TeachId")
                        .HasColumnName("TeachID");

                    b.HasKey("AutoId")
                        .HasName("PK_Clss");

                    b.HasIndex("AcaSession", "ClsName")
                        .HasName("Cls");

                    b.ToTable("Clss");
                });

            modelBuilder.Entity("SchMod.Models.Basics.Misc", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession")
                        .HasMaxLength(255);

                    b.Property<string>("BoardAffiliationno");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Curriculum")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("Email")
                        .HasColumnName("EMail")
                        .HasMaxLength(255);

                    b.Property<string>("Emedium")
                        .HasColumnName("EMedium")
                        .HasMaxLength(255);

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<int>("MiscId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MiscID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("PcpName")
                        .HasMaxLength(255);

                    b.Property<string>("PcpPhone")
                        .HasMaxLength(255);

                    b.Property<int>("RecMode")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RegMode");

                    b.Property<string>("SchAddress")
                        .HasMaxLength(255);

                    b.Property<string>("SchMotto")
                        .HasMaxLength(255);

                    b.Property<string>("SchName")
                        .HasMaxLength(255);

                    b.Property<string>("SchPhone")
                        .HasMaxLength(255);

                    b.Property<string>("SchRegNum");

                    b.Property<double>("SessionStartDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Version");

                    b.Property<string>("WebSite")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_Misc");

                    b.HasIndex("MiscId")
                        .HasName("MiscID");

                    b.ToTable("Misc");
                });

            modelBuilder.Entity("SchMod.Models.Basics.SchLeaveDetails", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BranchID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid");

                    b.Property<DateTime>("DateStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<DateTime>("SchLeaveDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("SchLeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchLeaveID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SchLeaveType")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("AutoId");

                    b.HasIndex("BranchId")
                        .HasName("EmpID");

                    b.HasIndex("SchLeaveId")
                        .HasName("CompLeaveID");

                    b.ToTable("SchLeaveDetails");
                });

            modelBuilder.Entity("SchMod.Models.Basics.StdCat", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("StdCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdCatID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_stdCat");

                    b.ToTable("stdCat");
                });

            modelBuilder.Entity("SchMod.Models.Basics.StdHouse", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("StHouse")
                        .HasColumnName("StdHouse")
                        .HasMaxLength(255);

                    b.Property<int>("StdHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdHouseID")
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_StdHouse");

                    b.HasIndex("StdHouseId")
                        .IsUnique()
                        .HasName("StdCatID");

                    b.ToTable("StdHouse");
                });

            modelBuilder.Entity("SchMod.Models.Basics.Subjects", b =>
                {
                    b.Property<int>("SubAutoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcaSession");

                    b.Property<int>("AutoGrades");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<string>("Category");

                    b.Property<int>("ClsWeek")
                        .HasColumnName("Cls_Week");

                    b.Property<string>("Clss");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("FeatureInReport");

                    b.Property<int>("FullMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("GradeOrMarks");

                    b.Property<string>("GradeType");

                    b.Property<int>("IsAssign")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsElective")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsPract")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsTheory")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("LabWeek")
                        .HasColumnName("Lab_Week");

                    b.Property<string>("LoginName");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("NLaboratory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nLaboratory")
                        .HasDefaultValueSql("0");

                    b.Property<int>("NLesson")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nLesson")
                        .HasDefaultValueSql("0");

                    b.Property<int>("NTutorials")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nTutorials")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PrefPeriod")
                        .HasColumnName("Pref_Period");

                    b.Property<string>("PrefTeacher")
                        .HasColumnName("Pref_Teacher");

                    b.Property<string>("RoomLab")
                        .HasColumnName("Room_Lab");

                    b.Property<string>("StandByTeacher");

                    b.Property<string>("SubCode");

                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SubName");

                    b.Property<int>("SubSn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("SubType");

                    b.Property<string>("SubjectExamName");

                    b.Property<int>("TeachId")
                        .HasColumnName("TeachID");

                    b.Property<int>("TutWeek")
                        .HasColumnName("Tut_Week");

                    b.HasKey("SubAutoId")
                        .HasName("SubAutoId");

                    b.HasIndex("SubId")
                        .HasName("SubID");

                    b.HasIndex("SubName", "Clss", "AcaSession", "IsElective", "Dormant", "DBid")
                        .HasName("_dta_index_Subjects_7_128719511__K30_K35_3_5_16_26");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchMod.Models.Basics.SubjectSubs", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("SubId")
                        .HasColumnName("SubID");

                    b.Property<string>("SubName")
                        .HasMaxLength(255);

                    b.Property<int>("SubjectSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectSubID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Teacher")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_SubjectSubs");

                    b.ToTable("SubjectSubs");
                });

            modelBuilder.Entity("SchMod.Models.Basics.Teachers", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("cTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("dBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("dormant");

                    b.Property<string>("loginName")
                        .HasMaxLength(50);

                    b.Property<string>("tName")
                        .IsRequired()
                        .HasColumnName("tName")
                        .HasMaxLength(50);

                    b.Property<string>("tTelephone")
                        .HasColumnName("tTelephone")
                        .HasMaxLength(50);

                    b.Property<string>("teachEMail");

                    b.Property<int>("teachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeachID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("teachLoginName");

                    b.HasKey("AutoId")
                        .HasName("aaaaaTeachers_PK");

                    b.HasIndex("teachId")
                        .HasName("TeachID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchMod.Models.Communication.ConSmss", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("CsmsdateFduesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CSMSDateFDuesID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<double>("DuesCheckDate");

                    b.Property<string>("FeeCaption");

                    b.Property<string>("ForClass");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("SessionName")
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.Property<string>("TextToSend");

                    b.HasKey("AutoId")
                        .HasName("PK__ConSMSs__2CDD9F46");

                    b.ToTable("ConSMSs");
                });

            modelBuilder.Entity("SchMod.Models.Communication.LetterTemplates", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LetterTemplate")
                        .HasColumnType("ntext");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TemplateID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("TemplateName")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_LetterTemplates");

                    b.ToTable("LetterTemplates");
                });

            modelBuilder.Entity("SchMod.Models.Communication.Smsemails", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<DateTime>("CheckDate");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<int>("Fdsdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FDSDId")
                        .HasDefaultValueSql("0");

                    b.Property<string>("FeeCaption");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<string>("MobNo")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Name");

                    b.Property<int>("RegNum");

                    b.Property<int>("SendorRecieved");

                    b.Property<string>("SessionName")
                        .HasMaxLength(50);

                    b.Property<int>("SmsemailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSEmailID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("SmsorEmail")
                        .HasColumnName("SMSorEmail");

                    b.Property<int>("Status");

                    b.Property<string>("Subject");

                    b.Property<string>("TFile")
                        .HasColumnName("tFile");

                    b.Property<string>("Text");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK__SMSemails__4F32B74A");

                    b.HasIndex("AutoId", "SmsemailId")
                        .HasName("_dta_index_SMSemails_7_1312723729__K2_1");

                    b.HasIndex("AutoId", "Dormant", "Status", "CheckDate")
                        .HasName("_dta_index_SMSemails_7_1312723729__K19_K8_K15_1");

                    b.HasIndex("Subject", "Email", "SendorRecieved", "CheckDate", "FeeCaption", "SessionName", "SmsemailId", "RegNum", "UniReg", "Text", "TFile", "DBid", "Status", "Dormant", "SmsorEmail", "MobNo", "ModTime")
                        .HasName("_dta_index_SMSemails_7_1312723729__K8_K19_K13_K10_K20_2_4_5_6_7_9_11_12_14_15_16_17");

                    b.ToTable("SMSemails");
                });

            modelBuilder.Entity("SchMod.Models.Convey.Circuit", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("CircuitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CircuitID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("CircuitName")
                        .HasMaxLength(255);

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("StopOrder");

                    b.Property<string>("Stoppage")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("aaaaaCircuit_PK");

                    b.HasIndex("CircuitId")
                        .HasName("CircuitID");

                    b.ToTable("Circuit");
                });

            modelBuilder.Entity("SchMod.Models.Convey.Conveyance", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("Address");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss");

                    b.Property<int>("ConId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ConMode");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("DateFrom")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("DateTo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<double>("Fare");

                    b.Property<string>("Gender");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Parents");

                    b.Property<int>("RegNum")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RollNo");

                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RouteID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StdName");

                    b.Property<int>("StopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StopID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Stops");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("AutoID");

                    b.HasAlternateKey("ConId");

                    b.HasIndex("ConId")
                        .HasName("ConID");

                    b.HasIndex("RegNum")
                        .HasName("StdId");

                    b.HasIndex("RouteId")
                        .HasName("RouteID");

                    b.ToTable("Conveyance");
                });

            modelBuilder.Entity("SchMod.Models.Convey.Routes", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("RouteDes");

                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RouteID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("RouteMode");

                    b.Property<string>("RouteName");

                    b.Property<string>("RouteNo")
                        .HasColumnType("nchar(10)");

                    b.Property<int>("StopOrder");

                    b.Property<string>("StopTimeFro")
                        .HasMaxLength(50);

                    b.Property<string>("StopTimeTo")
                        .HasMaxLength(50);

                    b.Property<int>("StopsId")
                        .HasColumnName("StopsID");

                    b.HasKey("AutoId")
                        .HasName("PK_Routes");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("SchMod.Models.Convey.Stops", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Circuit")
                        .HasMaxLength(255);

                    b.Property<string>("ConveyanceMode")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<DateTime>("FareFromMonth");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<double>("MonthlyFare")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("StopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StopID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Stops1")
                        .HasColumnName("Stops")
                        .HasMaxLength(50);

                    b.HasKey("AutoId")
                        .HasName("PK_Stops");

                    b.HasAlternateKey("StopId");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("SchMod.Models.Convey.VehicleDescription", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("Capacity");

                    b.Property<string>("Circuit");

                    b.Property<string>("ContactPhone");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("DriverAddress");

                    b.Property<string>("DriverDetails");

                    b.Property<string>("LoginName");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("VDriver")
                        .HasColumnName("vDriver");

                    b.Property<string>("VNumber")
                        .HasColumnName("vNumber");

                    b.Property<string>("VehicleDetails");

                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VehicleID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("VehicleName");

                    b.Property<string>("VehicleType");

                    b.HasKey("AutoId")
                        .HasName("PK_VehicleDescription");

                    b.HasAlternateKey("VehicleId");

                    b.ToTable("VehicleDescription");
                });

            modelBuilder.Entity("SchMod.Models.Convey.VehicleType", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("VehType");

                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_VehicleType");

                    b.HasAlternateKey("VehicleTypeId");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("SchMod.Models.Convey.VonRt", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("FrDate");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RouteId")
                        .HasColumnName("RouteID");

                    b.Property<int>("VehicleId")
                        .HasColumnName("VehicleID");

                    b.Property<int>("VonRtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VonRtID")
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_VonRt");

                    b.ToTable("VonRt");
                });

            modelBuilder.Entity("SchMod.Models.Exams.ConfigExam", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(255);

                    b.Property<int>("ConExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConExamID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ExamFor")
                        .HasMaxLength(255);

                    b.Property<string>("ExamFrom")
                        .HasMaxLength(255);

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<double>("MarksPc")
                        .HasColumnName("MarksPC");

                    b.Property<string>("MarksType");

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Ssession")
                        .HasColumnName("SSession")
                        .HasMaxLength(255);

                    b.Property<string>("Subj")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("aaaaaConfigExam_PK");

                    b.HasIndex("ConExamId")
                        .HasName("ConExamID");

                    b.HasIndex("Clss", "ExamFor", "ExamFrom", "Subj", "MarksPc", "Dormant", "DBid", "Ssession")
                        .HasName("_dta_index_ConfigExam_7_1115151018__K11_K14_K3_4_5_6_7_8");

                    b.ToTable("ConfigExam");
                });

            modelBuilder.Entity("SchMod.Models.Exams.ExamSub", b =>
                {
                    b.Property<int>("ExamSubAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExamSubAutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<double>("DoevalutionFrom")
                        .HasColumnName("DOEvalutionFrom");

                    b.Property<double>("DoevalutionTo")
                        .HasColumnName("DOEvalutionTo");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ExamName")
                        .HasMaxLength(50);

                    b.Property<int>("ExamSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExamSubID")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Factor");

                    b.Property<double>("Fmassign")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FMAssign")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Fmoral")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FMOral")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Fmpract")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FMPract")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Fmtheory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FMTheory")
                        .HasDefaultValueSql("0");

                    b.Property<double>("FullMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsAssign")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsElective")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsOral")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsPract")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsTheory")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("PassMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("Pmassign")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PMAssign")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Pmoral")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PMOral")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Pmpract")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PMPract")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Pmtheory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PMTheory")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Ssession")
                        .HasMaxLength(255);

                    b.Property<int>("SubExamMarksDirty")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("SubExamMarksLocked")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.Property<int>("SubType");

                    b.Property<int>("UseInExamTotal");

                    b.HasKey("ExamSubAutoId")
                        .HasName("PK_ExamSub");

                    b.HasIndex("Dormant", "DBid", "ExamName")
                        .HasName("_dta_index_ExamSub_7_365244356__K29_K34_K3");

                    b.HasIndex("Ssession", "Clss", "Dormant", "DBid")
                        .HasName("_dta_index_ExamSub_c_7_365244356__K5_K4_K29_K34");

                    b.HasIndex("Ssession", "Clss", "ExamName", "SubName")
                        .HasName("ExamSelect");

                    b.ToTable("ExamSub");
                });

            modelBuilder.Entity("SchMod.Models.Exams.ReportCard", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("RcClass")
                        .HasMaxLength(255);

                    b.Property<string>("RcExam")
                        .HasMaxLength(255);

                    b.Property<int>("RcId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("RcName");

                    b.Property<string>("RcSession")
                        .HasMaxLength(255);

                    b.Property<string>("RcType");

                    b.Property<string>("RcValue");

                    b.HasKey("AutoId")
                        .HasName("PK_ReportCard");

                    b.ToTable("ReportCard");
                });

            modelBuilder.Entity("SchMod.Models.Exams.StdSub", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasColumnName("clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("RegNum");

                    b.Property<int>("RollNum")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("SessionA")
                        .HasMaxLength(255);

                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("StdName")
                        .HasMaxLength(255);

                    b.Property<int>("StdSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdSubID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("StdSubAutoID");

                    b.HasIndex("RollNum")
                        .HasName("RollNum");

                    b.HasIndex("StdId")
                        .HasName("StdID");

                    b.HasIndex("StdSubId")
                        .HasName("StdSubID");

                    b.HasIndex("SubId")
                        .HasName("SubID");

                    b.ToTable("StdSub");
                });

            modelBuilder.Entity("SchMod.Models.Exams.SubjectsRel", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ExamName");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<double>("MarksPro");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.Property<int>("SubRelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubRelID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("SubSubName");

                    b.HasKey("AutoId")
                        .HasName("PK_SubjectsRel_1");

                    b.ToTable("SubjectsRel");
                });

            modelBuilder.Entity("SchMod.Models.General.AccountHead", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccName")
                        .HasMaxLength(50);

                    b.Property<string>("Balance")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.HasKey("AccId")
                        .HasName("AccId");

                    b.ToTable("AccountHead");
                });

            modelBuilder.Entity("SchMod.Models.General.Appoints", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("AccessType");

                    b.Property<string>("AppAgenda");

                    b.Property<double>("AppDate");

                    b.Property<string>("AppDuration");

                    b.Property<string>("AppHash");

                    b.Property<decimal?>("AppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AppID")
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<string>("AppLocation");

                    b.Property<string>("AppNotes");

                    b.Property<string>("AppPeriod");

                    b.Property<string>("AppPriorty")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("AppRemind");

                    b.Property<string>("AppSetBy");

                    b.Property<string>("AppStatus")
                        .HasColumnType("nchar(10)");

                    b.Property<string>("AppSubject");

                    b.Property<string>("AppTitle");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_Appoints");

                    b.ToTable("Appoints");
                });

            modelBuilder.Entity("SchMod.Models.General.FieldOrder", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("Description");

                    b.Property<string>("FieldName");

                    b.Property<string>("FormName");

                    b.Property<double>("ImagePage");

                    b.Property<int>("TabOrder");

                    b.HasKey("AutoId")
                        .HasName("PK__FieldOrder__00CA12DE");

                    b.ToTable("FieldOrder");
                });

            modelBuilder.Entity("SchMod.Models.General.Holidays", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession")
                        .HasMaxLength(50);

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Descrptn");

                    b.Property<int>("Dormant");

                    b.Property<DateTime>("Hdate")
                        .HasColumnName("HDate");

                    b.Property<int>("Hid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Htype")
                        .HasColumnName("HType");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("Month");

                    b.Property<string>("Title");

                    b.Property<int>("Year");

                    b.HasKey("AutoId")
                        .HasName("PK_Holidays");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("SchMod.Models.General.Images", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("AccessLevel");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ImageID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("ImageModTime");

                    b.Property<string>("ImageName");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.HasKey("AutoId")
                        .HasName("PK_Images");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SchMod.Models.General.LeaveDefinition", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<bool>("CanbeCarriedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("CarryoverLimit")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("DateStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsPaidLeave")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsSchLeave")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LeaveType")
                        .HasMaxLength(255);

                    b.Property<int>("LeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LeaveTypeID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("UpsizeTs")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("upsize_ts")
                        .HasColumnType("timestamp");

                    b.HasKey("AutoId")
                        .HasName("AutoID");

                    b.HasIndex("LeaveTypeId")
                        .HasName("LeaveTypeID");

                    b.ToTable("LeaveDefinition");
                });

            modelBuilder.Entity("SchMod.Models.General.LoginDetails", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Email")
                        .HasColumnName("EMail")
                        .HasMaxLength(255);

                    b.Property<string>("HintAnswer")
                        .HasMaxLength(255);

                    b.Property<string>("HintQuestion")
                        .HasMaxLength(255);

                    b.Property<DateTime>("LoginExpiry");

                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoginID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("LoginLevel");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<string>("LoginNameCh")
                        .HasMaxLength(50);

                    b.Property<string>("LoginPassword")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("SpecialDetail")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_LoginDetails");

                    b.ToTable("LoginDetails");
                });

            modelBuilder.Entity("SchMod.Models.General.PermissionT", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("PermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Permissionss");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("TillDate");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK__PermissionT__7A1D154F");

                    b.ToTable("PermissionT");
                });

            modelBuilder.Entity("SchMod.Models.General.Roles", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DefaultLevel");

                    b.Property<int>("DefaultPermission");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("RoleFnName");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("RoleName");

                    b.Property<string>("RoleSet");

                    b.HasKey("AutoId")
                        .HasName("PK__Roles__5C8CB268");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchMod.Models.General.Template", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<double>("TempModTime");

                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TemplateID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("TemplateName");

                    b.Property<string>("TemplateValue");

                    b.HasKey("AutoId")
                        .HasName("PK_Template");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("SchMod.Models.Marx.Marks", b =>
                {
                    b.Property<int>("MkAutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MkAutoID");

                    b.Property<string>("AsgnMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("ExamName")
                        .HasMaxLength(50);

                    b.Property<double>("FMarks")
                        .HasColumnName("FMarks");

                    b.Property<string>("Grades")
                        .HasMaxLength(255);

                    b.Property<string>("GradesVal")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<string>("MClss")
                        .HasColumnName("MClss")
                        .HasMaxLength(50);

                    b.Property<string>("MSession")
                        .HasColumnName("MSession")
                        .HasMaxLength(255);

                    b.Property<int>("MkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MkID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("OrMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("Percentile");

                    b.Property<string>("PracMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("RecMode");

                    b.Property<int>("RegNum")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ScaleUpGrade")
                        .HasMaxLength(255);

                    b.Property<string>("StdGrades")
                        .HasMaxLength(50);

                    b.Property<string>("StdName");

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.Property<string>("ThMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("TotalMarks");

                    b.Property<string>("TotalMarksCalc");

                    b.Property<int>("UniReg");

                    b.Property<string>("cTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("dBID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("presentRollNum");

                    b.HasKey("MkAutoID")
                        .HasName("PK_Marks");

                    b.HasAlternateKey("MkID");

                    b.HasIndex("MSession", "MClss", "ExamName", "SubName", "Dormant")
                        .HasName("MKSInd");

                    b.HasIndex("MSession", "MClss", "ExamName", "SubName", "UniReg", "Dormant", "dBID")
                        .HasName("_dta_index_Marks_c_7_2126630619__K15_K3_K5_K4_K22_K18_K24");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("SchMod.Models.Marx.SelectMarks", b =>
                {
                    b.Property<int>("SelectMarksId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DBid");

                    b.Property<string>("ExamName")
                        .HasMaxLength(50);

                    b.Property<string>("MClss")
                        .HasMaxLength(50);

                    b.Property<string>("Sessn")
                        .HasMaxLength(50);

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.HasKey("SelectMarksId");

                    b.ToTable("SelectMarks");
                });

            modelBuilder.Entity("SchMod.Models.Marx.TrMgDel", b =>
                {
                    b.Property<int>("MkTrId")
                        .HasColumnName("MkTrID");

                    b.Property<double>("AsgnMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("Dormant");

                    b.Property<string>("ExamName")
                        .HasMaxLength(50);

                    b.Property<string>("Grades")
                        .HasMaxLength(255);

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<string>("Mclss")
                        .HasColumnName("MClss")
                        .HasMaxLength(50);

                    b.Property<int>("MkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MkID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Msession")
                        .HasColumnName("MSession")
                        .HasMaxLength(255);

                    b.Property<double>("OrMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("PracMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RegNum")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("StdGrades")
                        .HasMaxLength(50);

                    b.Property<string>("SubName")
                        .HasMaxLength(50);

                    b.Property<double>("ThMarks")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("TotalMarks");

                    b.Property<double>("TotalMarksCalc");

                    b.Property<string>("TrMg")
                        .HasColumnName("TrMG")
                        .HasColumnType("nchar(10)");

                    b.HasKey("MkTrId")
                        .HasName("PK_TrMG");

                    b.ToTable("TrMG_Del");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.CashDenom", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("CdenoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDenoID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Denomination");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<double>("RecDate");

                    b.Property<int>("ReceiptNo");

                    b.Property<double>("Received");

                    b.Property<double>("Returned");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK__CashDenom__75586032");

                    b.HasIndex("AutoId", "CdenoId")
                        .HasName("_dta_index_CashDenom_7_1952726009__K2_1");

                    b.HasIndex("AutoId", "AcaSession", "ReceiptNo", "DBid")
                        .HasName("_dta_index_CashDenom_7_1952726009__K4_K13_1_14");

                    b.ToTable("CashDenom");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.ChqDrafts", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<double>("Amount");

                    b.Property<int>("Bounced");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("ChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChequeID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ChequeNo");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("Dated");

                    b.Property<int>("Deposited");

                    b.Property<string>("DepositedIn")
                        .HasColumnName("DepositedIN");

                    b.Property<int>("Dormant");

                    b.Property<string>("IssuedBy");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<DateTime>("RecDate");

                    b.Property<int>("ReceiptNo");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK__ChqDrafts__6521F869");

                    b.HasIndex("IssuedBy", "Dormant", "DBid")
                        .HasName("_dta_index_ChqDrafts_7_1680725040__K14_K17_6");

                    b.HasIndex("AutoId", "AcaSession", "ReceiptNo", "DBid")
                        .HasName("_dta_index_ChqDrafts_7_1680725040__K4_K17_1_18");

                    b.ToTable("ChqDrafts");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.DynaFee", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Caption")
                        .HasMaxLength(255);

                    b.Property<int>("ClsFeeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("DueOn");

                    b.Property<string>("FeeCaption");

                    b.Property<int>("FeeNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("ForClass")
                        .HasMaxLength(50);

                    b.Property<int>("ForMonth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("PayByDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("SessionName")
                        .HasMaxLength(255);

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_DynaFee");

                    b.HasIndex("ClsFeeId")
                        .HasName("ClsFeeId");

                    b.HasIndex("ForMonth", "FeeCaption", "Dormant", "DBid", "ForClass", "SessionName")
                        .HasName("_dta_index_DynaFee_7_1225771424__K12_K17_K9_K14_5_7");

                    b.HasIndex("AutoId", "FeeCaption", "StdCategory", "Dormant", "DBid", "ForClass", "SessionName", "ForMonth")
                        .HasName("_dta_index_DynaFee_7_1225771424__K12_K17_K9_K14_K5_1_7_10");

                    b.HasIndex("FeeCaption", "Dormant", "DBid", "ForClass", "ForMonth", "StdCategory", "AutoId", "FeeNo")
                        .HasName("_dta_index_DynaFee_7_1225771424__K12_K17_K9_K5_K10_K1_K3_7");

                    b.HasIndex("StdCategory", "AutoId", "FeeNo", "Caption", "Amount", "Dormant", "DBid", "ForClass", "SessionName", "ForMonth")
                        .HasName("_dta_index_DynaFee_7_1225771424__K12_K17_K9_K14_K5_1_3_4_6_10");

                    b.HasIndex("StdCategory", "FeeNo", "Caption", "Amount", "FeeCaption", "Dormant", "DBid", "ForClass", "SessionName", "AutoId", "ForMonth")
                        .HasName("_dta_index_DynaFee_7_1225771424__K12_K17_K9_K14_K1_K5_3_4_6_7_10");

                    b.ToTable("DynaFee");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.Fcaption", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("FeeCaption")
                        .HasMaxLength(50);

                    b.Property<string>("FeeDuration")
                        .HasMaxLength(255);

                    b.Property<int>("FeeNameId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("FeeOrder");

                    b.Property<string>("FeeType")
                        .HasMaxLength(50);

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.HasKey("AutoId")
                        .HasName("PK_FCaption");

                    b.HasIndex("FeeNameId")
                        .HasName("FeeNameId");

                    b.ToTable("FCaption");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.FeeDuesSmsdates", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<double>("DueCheckDate");

                    b.Property<int>("Fdsdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FDSDId")
                        .HasDefaultValueSql("0");

                    b.Property<string>("FeeCaption");

                    b.Property<string>("ForClass");

                    b.Property<int>("ForMonth");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("SessionName")
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.Property<string>("TextToSend");

                    b.Property<double>("TimeOfDueCheck");

                    b.HasKey("AutoId")
                        .HasName("PK__FeeDuesSMSDates__3FF073BA");

                    b.ToTable("FeeDuesSMSDates");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.LateConFee", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<double>("Amount");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal");

                    b.Property<int>("Clfid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CLFId")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("FeeCaption");

                    b.Property<string>("ForClass");

                    b.Property<int>("ForMonth");

                    b.Property<int>("ForPart");

                    b.Property<double>("LateDate");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("SessionName")
                        .HasMaxLength(50);

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.HasKey("AutoId")
                        .HasName("PK_LateConFee");

                    b.HasIndex("Amount", "ForClass", "SessionName", "ForMonth", "StdCategory", "DBid", "Dormant", "LateDate")
                        .HasName("_dta_index_LateConFee_7_1931153925__K10_K3_K8_K15_K12_K4_5_6");

                    b.ToTable("LateConFee");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.PosTrn", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<double>("Amount");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("Dated");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("PosTrnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PosTrnID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("PosTrnNo");

                    b.Property<DateTime>("RecDate");

                    b.Property<int>("ReceiptNo");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_PosTrn");

                    b.ToTable("PosTrn");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.StdFee", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Caption")
                        .HasMaxLength(50);

                    b.Property<int>("ChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChequeID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<int>("FeeNo");

                    b.Property<double>("ForMonth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("RegNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("StdFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stdFeeId")
                        .HasDefaultValueSql("0");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_StdFee");

                    b.HasIndex("StdFeeId")
                        .HasName("ClsFeeId");

                    b.HasIndex("AutoId", "Dormant", "ForMonth", "UniReg", "Caption")
                        .HasName("_dta_index_StdFee_7_727673640__K7_K5_K12_K4_1");

                    b.ToTable("StdFee");
                });

            modelBuilder.Entity("SchMod.Models.StdFees.WaiverCaption", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<double>("DefAmount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("FeeCaption")
                        .HasMaxLength(50);

                    b.Property<int>("FeeNameId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsDisc")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.HasKey("AutoId")
                        .HasName("PK_WaiverCaption");

                    b.HasIndex("FeeNameId")
                        .HasName("FeeNameId");

                    b.ToTable("WaiverCaption");
                });

            modelBuilder.Entity("SchMod.Models.Studs.AwareNames", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AwareName")
                        .HasMaxLength(255);

                    b.Property<int>("AwareNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AwareNameID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("AwareNameMotive")
                        .HasMaxLength(255);

                    b.Property<string>("AwareNameReportCard")
                        .HasMaxLength(255);

                    b.Property<int>("AwareNameSn");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("IsReflectedInReportCard")
                        .HasColumnName("IsReflectedInReportCArd");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_AwareNames");

                    b.ToTable("AwareNames");
                });

            modelBuilder.Entity("SchMod.Models.Studs.Awareness", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<int>("AwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AwareID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("AwareName");

                    b.Property<int>("AwareNameId")
                        .HasColumnName("AwareNameID");

                    b.Property<string>("AwareValue");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Clss")
                        .HasMaxLength(50);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<double>("RegNumber");

                    b.Property<string>("Session");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_Awareness");

                    b.ToTable("Awareness");
                });

            modelBuilder.Entity("SchMod.Models.Studs.CharecterCertificate", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<int>("AdmissionNo");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Character");

                    b.Property<string>("CompSub");

                    b.Property<string>("Concession")
                        .HasMaxLength(255);

                    b.Property<string>("Conduct")
                        .HasMaxLength(255);

                    b.Property<string>("CurricularActivities")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Division");

                    b.Property<double>("DoApplication");

                    b.Property<double>("DoIssue");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("DuesPaid")
                        .HasMaxLength(255);

                    b.Property<string>("Foiled")
                        .HasMaxLength(255);

                    b.Property<string>("LastExam")
                        .HasMaxLength(255);

                    b.Property<double>("LeftOn");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Nationality")
                        .HasMaxLength(255);

                    b.Property<string>("NccGg")
                        .HasMaxLength(255);

                    b.Property<string>("PassingYear");

                    b.Property<int>("Present");

                    b.Property<string>("PromotedClass");

                    b.Property<string>("Promotion");

                    b.Property<string>("Qualified")
                        .HasMaxLength(255);

                    b.Property<string>("ReasonOfTc")
                        .HasColumnName("ReasonOfTC");

                    b.Property<string>("Remarks");

                    b.Property<string>("RollCode");

                    b.Property<string>("RollNo");

                    b.Property<string>("ScSt")
                        .HasColumnName("ScST");

                    b.Property<int>("Sn")
                        .HasColumnName("SN");

                    b.Property<string>("Subject1")
                        .HasMaxLength(255);

                    b.Property<string>("Subject2")
                        .HasMaxLength(255);

                    b.Property<string>("Subject3")
                        .HasMaxLength(255);

                    b.Property<string>("Subject4")
                        .HasMaxLength(255);

                    b.Property<string>("Subject5")
                        .HasMaxLength(255);

                    b.Property<string>("Subject6")
                        .HasMaxLength(255);

                    b.Property<string>("Subject7")
                        .HasMaxLength(255);

                    b.Property<byte[]>("TcFile")
                        .HasColumnType("image");

                    b.Property<int>("TcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TcID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("UniReg");

                    b.Property<int>("Workingday");

                    b.HasKey("AutoId")
                        .HasName("PK_CharecterCertificate");

                    b.ToTable("CharecterCertificate");
                });

            modelBuilder.Entity("SchMod.Models.Studs.Expenses", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExpenseID");

                    b.Property<decimal?>("AdvanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountSpent")
                        .HasColumnType("money");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DatePurchased")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("Dormant");

                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ExpenseType")
                        .HasMaxLength(50);

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50);

                    b.Property<string>("PurposeofExpense")
                        .HasMaxLength(255);

                    b.Property<byte[]>("UpsizeTs")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("upsize_ts")
                        .HasColumnType("timestamp");

                    b.HasKey("ExpenseId")
                        .HasName("aaaaaExpenses_PK");

                    b.HasIndex("DateSubmitted")
                        .HasName("DateSubmitted");

                    b.HasIndex("EmployeeId")
                        .HasName("EmployeeID");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("SchMod.Models.Studs.SearchStd", b =>
                {
                    b.Property<int>("SStdID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SClass");

                    b.Property<DateTime>("SDOB");

                    b.Property<int>("SGender");

                    b.Property<int>("SRegNumber");

                    b.Property<string>("SStdName");

                    b.Property<int>("SUniReg");

                    b.Property<string>("SeaStr");

                    b.HasKey("SStdID");

                    b.ToTable("SearchStd");
                });

            modelBuilder.Entity("SchMod.Models.Studs.Students", b =>
                {
                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdID");

                    b.Property<string>("Aadhar")
                        .HasColumnName("AAdhar")
                        .HasMaxLength(12);

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("Address1")
                        .HasMaxLength(255);

                    b.Property<string>("AdmissionNo")
                        .HasColumnName("AdmissionNO");

                    b.Property<string>("AnnualIncome");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(50);

                    b.Property<string>("BoardNo");

                    b.Property<string>("BoardRollCode");

                    b.Property<string>("BusRoute")
                        .HasMaxLength(50);

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("City")
                        .HasMaxLength(255);

                    b.Property<string>("ClassAdmittedTo")
                        .HasMaxLength(50);

                    b.Property<string>("Color_House")
                        .HasColumnName("Color_House")
                        .HasMaxLength(50);

                    b.Property<string>("ConPhone")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<double>("DateOfAdmission")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("-1");

                    b.Property<double>("DateOfFeeApp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("-1");

                    b.Property<DateTime>("Dob")
                        .HasColumnName("DOB");

                    b.Property<int>("Dormant");

                    b.Property<double>("Dues");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50);

                    b.Property<string>("Height")
                        .HasMaxLength(50);

                    b.Property<string>("Hphone")
                        .HasColumnName("HPhone")
                        .HasMaxLength(50);

                    b.Property<string>("Lgaddress1")
                        .HasColumnName("LGAddress1");

                    b.Property<string>("Lgaddress2")
                        .HasColumnName("LGAddress2");

                    b.Property<string>("Lgname")
                        .HasColumnName("LGName");

                    b.Property<string>("Lgphone")
                        .HasColumnName("LGPhone")
                        .HasMaxLength(255);

                    b.Property<string>("LoginName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Mphone")
                        .HasColumnName("MPhone")
                        .HasMaxLength(50);

                    b.Property<string>("Nationality")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<string>("OccupationF")
                        .HasMaxLength(255);

                    b.Property<string>("OccupationM")
                        .HasMaxLength(255);

                    b.Property<string>("OralHygiene");

                    b.Property<string>("ParentsNamesF")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ParentsNamesM")
                        .HasMaxLength(255);

                    b.Property<double>("Payable");

                    b.Property<string>("PermAddress")
                        .HasMaxLength(255);

                    b.Property<string>("PermAddress1")
                        .HasMaxLength(255);

                    b.Property<string>("PermAilment")
                        .HasMaxLength(50);

                    b.Property<string>("PermCity")
                        .HasMaxLength(255);

                    b.Property<string>("PermIdentification");

                    b.Property<string>("PermPostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("PermState")
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("PresentClass")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("PresentRollNo");

                    b.Property<string>("PrevSchool")
                        .HasMaxLength(255);

                    b.Property<string>("QualificationF")
                        .HasMaxLength(50);

                    b.Property<string>("QualificationM")
                        .HasMaxLength(50);

                    b.Property<int>("RegNumber");

                    b.Property<string>("Religion")
                        .HasMaxLength(255);

                    b.Property<string>("RouteMode");

                    b.Property<int?>("SearchStdSStdID");

                    b.Property<string>("Section")
                        .HasMaxLength(50);

                    b.Property<string>("Sex");

                    b.Property<string>("SplAilment");

                    b.Property<string>("State")
                        .HasMaxLength(20);

                    b.Property<string>("StdCategory")
                        .HasMaxLength(255);

                    b.Property<string>("StdGenCategory");

                    b.Property<string>("StdName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("StdSession")
                        .HasMaxLength(255);

                    b.Property<int>("StdStatus");

                    b.Property<string>("Teeth");

                    b.Property<string>("Testimonials")
                        .HasMaxLength(255);

                    b.Property<int>("UniReg");

                    b.Property<string>("VisionL");

                    b.Property<string>("VisionR");

                    b.Property<string>("Weight");

                    b.HasKey("StdId")
                        .HasName("PK_Students");

                    b.HasIndex("SearchStdSStdID");

                    b.HasIndex("Dormant", "BloodGroup")
                        .HasName("_dta_index_Students_7_873770170__K64_K38");

                    b.HasIndex("Dormant", "OccupationF")
                        .HasName("_dta_index_Students_7_873770170__K64_K10");

                    b.HasIndex("Dormant", "OccupationM")
                        .HasName("_dta_index_Students_7_873770170__K64_K13");

                    b.HasIndex("Dormant", "PrevSchool")
                        .HasName("_dta_index_Students_7_873770170__K64_K29");

                    b.HasIndex("Dormant", "QualificationF")
                        .HasName("_dta_index_Students_7_873770170__K64_K11");

                    b.HasIndex("Dormant", "QualificationM")
                        .HasName("_dta_index_Students_7_873770170__K64_K14");

                    b.HasIndex("Dormant", "Religion")
                        .HasName("_dta_index_Students_7_873770170__K64_K8");

                    b.HasIndex("StdGenCategory", "Dormant")
                        .HasName("_dta_index_Students_7_873770170__K64_69");

                    b.HasIndex("RegNumber", "Dormant", "StdStatus")
                        .HasName("_dta_index_Students_7_873770170__K64_K31_2");

                    b.HasIndex("RouteMode", "Dormant", "DBid")
                        .HasName("_dta_index_Students_7_873770170__K64_K68_71");

                    b.HasIndex("Dormant", "UniReg", "StdStatus", "DBid")
                        .HasName("_dta_index_Students_c_7_873770170__K64_K67_K31_K68");

                    b.HasIndex("RegNumber", "StdSession", "Dormant", "StdStatus")
                        .HasName("_dta_index_Students_7_873770170__K30_K64_K31_2");

                    b.HasIndex("Dormant", "StdSession", "PresentClass", "UniReg", "StdStatus")
                        .HasName("IndRegNum");

                    b.HasIndex("PresentClass", "Dormant", "RegNumber", "StdStatus", "DBid")
                        .HasName("_dta_index_Students_7_873770170__K64_K2_K31_K68_16");

                    b.HasIndex("RegNumber", "Dormant", "StdSession", "Sex", "StdStatus")
                        .HasName("_dta_index_Students_7_873770170__K64_K30_K6_K31_2");

                    b.HasIndex("RegNumber", "Dormant", "UniReg", "DBid", "ModTime")
                        .HasName("_dta_index_Students_7_873770170__K64_K67_K68_K63_2");

                    b.HasIndex("UniReg", "RegNumber", "Dormant", "StdSession", "DBid")
                        .HasName("_dta_index_Students_7_873770170__K2_K64_K30_K68_67");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchMod.Models.Studs.TcData", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<int>("AdmissionNo");

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("Character");

                    b.Property<string>("CompSub");

                    b.Property<string>("Concession")
                        .HasMaxLength(255);

                    b.Property<string>("Conduct")
                        .HasMaxLength(255);

                    b.Property<string>("CurricularActivities")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Division");

                    b.Property<double>("DoApplication");

                    b.Property<double>("DoIssue");

                    b.Property<int>("Dormant")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("DuesPaid")
                        .HasMaxLength(255);

                    b.Property<string>("Foiled")
                        .HasMaxLength(255);

                    b.Property<string>("LastExam")
                        .HasMaxLength(255);

                    b.Property<double>("LeftOn");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Nationality")
                        .HasMaxLength(255);

                    b.Property<string>("NccGg")
                        .HasMaxLength(255);

                    b.Property<string>("PassingCertificate");

                    b.Property<string>("PassingSubject");

                    b.Property<string>("PassingYear");

                    b.Property<int>("Present");

                    b.Property<string>("PromotedClass");

                    b.Property<string>("Promotion");

                    b.Property<string>("Qualified")
                        .HasMaxLength(255);

                    b.Property<string>("ReasonOfTc")
                        .HasColumnName("ReasonOfTC");

                    b.Property<string>("Remarks");

                    b.Property<string>("RollCode");

                    b.Property<string>("RollNo");

                    b.Property<string>("ScSt")
                        .HasColumnName("ScST");

                    b.Property<int>("Sn")
                        .HasColumnName("SN");

                    b.Property<string>("Subject1")
                        .HasMaxLength(255);

                    b.Property<string>("Subject2")
                        .HasMaxLength(255);

                    b.Property<string>("Subject3")
                        .HasMaxLength(255);

                    b.Property<string>("Subject4")
                        .HasMaxLength(255);

                    b.Property<string>("Subject5")
                        .HasMaxLength(255);

                    b.Property<string>("Subject6")
                        .HasMaxLength(255);

                    b.Property<string>("Subject7")
                        .HasMaxLength(255);

                    b.Property<byte[]>("TcFile")
                        .HasColumnType("image");

                    b.Property<int>("TcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TcID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("UniReg");

                    b.Property<int>("Workingday");

                    b.HasKey("AutoId")
                        .HasName("PK_TcData");

                    b.HasIndex("DoIssue", "Dormant", "UniReg")
                        .HasName("_dta_index_TcData_7_765245781__K29_K34_25");

                    b.ToTable("TcData");
                });

            modelBuilder.Entity("SchMod.Models.Studs.TrStdClassCat", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSessionFrom")
                        .HasMaxLength(255);

                    b.Property<string>("AcaSessionTo")
                        .HasMaxLength(255);

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<string>("ClsPromFrom")
                        .HasColumnName("clsPromFrom")
                        .HasMaxLength(255);

                    b.Property<string>("ClsPromTo")
                        .HasColumnName("clsPromTo")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("RegNumber");

                    b.Property<string>("StdCatFrom")
                        .HasColumnName("stdCatFrom")
                        .HasMaxLength(255);

                    b.Property<string>("StdCatTo")
                        .HasColumnName("stdCatTo")
                        .HasMaxLength(255);

                    b.Property<string>("StdName")
                        .HasMaxLength(255);

                    b.Property<int>("TrStdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TrStdID")
                        .HasDefaultValueSql("0");

                    b.HasKey("AutoId")
                        .HasName("PK_TrStdClassCat");

                    b.ToTable("TrStdClassCat");
                });

            modelBuilder.Entity("SchMod.ViewModels.StdFees.FeeForm", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Clss");

                    b.Property<string>("ConPhone");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FNames");

                    b.Property<string>("Gender");

                    b.Property<string>("MNames");

                    b.Property<int>("RegNo");

                    b.Property<int>("RollNo");

                    b.Property<string>("StdCat");

                    b.Property<string>("StdName");

                    b.Property<int>("UniReg");

                    b.HasKey("Sn");

                    b.ToTable("FeeForm");
                });

            modelBuilder.Entity("SchMod.ViewModels.StdFees.FeeSumm", b =>
                {
                    b.Property<int>("FeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<string>("Caption");

                    b.Property<DateTime>("DueDate");

                    b.Property<string>("FeeCaption");

                    b.Property<int>("FeeNo");

                    b.Property<int>("ForMonth");

                    b.Property<string>("IsPaid");

                    b.Property<DateTime>("PayDate");

                    b.Property<string>("ReceiptNo");

                    b.Property<string>("Remarks");

                    b.Property<int>("Sn");

                    b.HasKey("FeeId");

                    b.ToTable("FeeSumm");
                });

            modelBuilder.Entity("SchMod.ViewModels.StdFees.Receipt", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<double>("AmountPaid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<double>("AmountPayable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("BankName")
                        .HasMaxLength(50);

                    b.Property<string>("BillNo")
                        .HasMaxLength(255);

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ChqDated")
                        .HasMaxLength(50);

                    b.Property<string>("ChqNumber")
                        .HasMaxLength(50);

                    b.Property<string>("Clss");

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<string>("DelRemarks");

                    b.Property<int>("Dormant");

                    b.Property<string>("FeeHeading");

                    b.Property<double>("ForPeriod")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Gender");

                    b.Property<int>("IsDuesClearance");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("PaidAt")
                        .HasColumnType("nchar(50)");

                    b.Property<string>("PaymentMode")
                        .HasMaxLength(50);

                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RecID")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("ReceiptDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("ReceiptNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<int>("RegNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255);

                    b.Property<int>("RollNo");

                    b.Property<string>("SName")
                        .HasColumnName("sName");

                    b.Property<string>("StdCat");

                    b.Property<string>("StdName");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_Receipt_1");

                    b.HasIndex("AmountPaid")
                        .HasName("AmountPAid");

                    b.HasIndex("PaidAt")
                        .HasName("_dta_index_Receipt_7_199671759__K22");

                    b.HasIndex("RecId")
                        .HasName("RecID");

                    b.HasIndex("ReceiptNo")
                        .HasName("ReceiptNo");

                    b.HasIndex("AcaSession", "ReceiptNo")
                        .HasName("_dta_index_Receipt_7_199671759__K3_26");

                    b.HasIndex("Dormant", "LoginName")
                        .HasName("_dta_index_Receipt_7_199671759__K17_K18");

                    b.HasIndex("AcaSession", "ReceiptDate", "Dormant", "ReceiptNo")
                        .HasName("_dta_index_Receipt_7_199671759__K5_K17_K3_26");

                    b.HasIndex("AcaSession", "UniReg", "ReceiptNo", "ForPeriod", "Dormant", "DBid")
                        .HasName("_dta_index_Receipt_7_199671759__K6_K3_K8_K17_K21_26");

                    b.HasIndex("AmountPaid", "PaidAt", "FeeHeading", "AcaSession", "ReceiptDate", "AmountPayable", "UniReg", "ReceiptNo", "Dormant", "IsDuesClearance", "ForPeriod", "DBid")
                        .HasName("_dta_index_Receipt_7_199671759__K6_K3_K17_K11_K8_K21_5_9_10_22_24_26");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("SchMod.ViewModels.StdFees.ReceiptDetails", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoID");

                    b.Property<string>("AcaSession");

                    b.Property<double>("AmountPaid");

                    b.Property<string>("BillNo")
                        .HasMaxLength(255);

                    b.Property<string>("CTerminal")
                        .HasColumnName("cTerminal")
                        .HasMaxLength(255);

                    b.Property<int>("DBid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dBID")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Dormant");

                    b.Property<string>("FeenWahead")
                        .HasColumnName("FEEnWAHead")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ForPeriod")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RecID")
                        .HasDefaultValueSql("0");

                    b.Property<int?>("ReceiptAutoId");

                    b.Property<int>("ReceiptNo");

                    b.Property<int>("RegNo");

                    b.Property<string>("RemarkDetails")
                        .HasMaxLength(255);

                    b.Property<int>("SlNo");

                    b.Property<int>("UniReg");

                    b.HasKey("AutoId")
                        .HasName("PK_ReceiptDetails");

                    b.HasIndex("AmountPaid")
                        .HasName("AmountPaid");

                    b.HasIndex("RecId")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K2");

                    b.HasIndex("ReceiptAutoId");

                    b.HasIndex("RegNo")
                        .HasName("StdID");

                    b.HasIndex("Dormant", "ReceiptNo", "FeenWahead")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K11_K3_K8");

                    b.HasIndex("AutoId", "Dormant", "AcaSession", "DBid", "ReceiptNo")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K17_K3_1_11_18");

                    b.HasIndex("AcaSession", "DBid", "ReceiptNo", "Dormant", "ForPeriod", "FeenWahead")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K17_K3_K11_K7_K8_18");

                    b.HasIndex("AcaSession", "FeenWahead", "ReceiptNo", "ForPeriod", "Dormant", "DBid")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K8_K3_K7_K11_K17_18");

                    b.HasIndex("AcaSession", "ForPeriod", "FeenWahead", "ReceiptNo", "Dormant", "DBid")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K7_K8_K3_K11_K17_18");

                    b.HasIndex("AcaSession", "FeenWahead", "ReceiptNo", "ForPeriod", "DBid", "Dormant", "UniReg")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K8_K3_K7_K17_K11_K16_18");

                    b.HasIndex("AcaSession", "FeenWahead", "UniReg", "ReceiptNo", "ForPeriod", "Dormant", "DBid")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K8_K16_K3_K7_K11_K17_18");

                    b.HasIndex("AcaSession", "UniReg", "ReceiptNo", "ForPeriod", "DBid", "Dormant", "FeenWahead")
                        .HasName("_dta_index_ReceiptDetails_7_343672272__K16_K3_K7_K17_K11_K8_18");

                    b.ToTable("ReceiptDetails");
                });

            modelBuilder.Entity("SchMod.Models.Studs.Students", b =>
                {
                    b.HasOne("SchMod.Models.Studs.SearchStd")
                        .WithMany("StdList")
                        .HasForeignKey("SearchStdSStdID");
                });

            modelBuilder.Entity("SchMod.ViewModels.StdFees.ReceiptDetails", b =>
                {
                    b.HasOne("SchMod.ViewModels.StdFees.Receipt")
                        .WithMany("RecDetails")
                        .HasForeignKey("ReceiptAutoId");
                });
#pragma warning restore 612, 618
        }
    }
}
